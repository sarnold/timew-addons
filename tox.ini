[tox]
envlist = py3{9,10,11,12,13}-linux,dev
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    ubuntu-22.04: linux
    ubuntu-24.04: linux

[base]
deps =
    pip>=22.1
    setuptools_scm[toml]

[build]
deps =
    pip>=22.1
    build
    twine

[testenv]
skip_install = true

setenv =
    COVERAGE_FILE = .coverage.{envname}

passenv =
    SETUPTOOLS_SCM_DEBUG
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    REPO_CFG
    pythonLocation

allowlist_externals =
    bash

deps =
    {[base]deps}
    # logging_tree
    -e .[test,cov]

commands =
    python -m pytest -v tests/ --capture={posargs:"fd"} --cov=timew_status --cov-branch --cov-report term-missing

[testenv:coverage]
basepython =
    python3

skip_install =
    true

allowlist_externals =
    bash

deps =
    coverage

commands =
    bash -c 'coverage combine .coverage.py*'
    coverage xml
    bash .github/fix_pkg_name.sh

depends =
    py39
    py310
    py311
    py312
    py313

[coverage:run]
parallel=True

[testenv:{sync,do}]
envdir = {toxinidir}/.sync
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run cmd following "--" from .sync environment, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning worflow deps

passenv =
    REPO_CFG
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    -r requirements-sync.txt

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:dev]
skip_install = true

passenv =
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    REPO_CFG

allowlist_externals =
    bash
    make

deps =
    {[base]deps}
    # logging_tree
    -e .

commands =
    python -c 'from timewreport.parser import TimeWarriorParser'

[testenv:{docs,ldocs,cdocs,pdocs}]
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
envdir = {toxworkdir}/docs
runner = ignore_env_name_mismatch
skip_install = true

allowlist_externals =
    make
    bash

deps =
    {[base]deps}
    .[doc]

commands =
    docs: make -C docs html
    pdocs: make -C docs pdf
    ldocs: make -C docs linkcheck
    cdocs: make -C docs clean

[testenv:changes,sum]
skip_install = true

allowlist_externals =
    {[testenv:dev]allowlist_externals}

passenv =
    {[testenv:dev]passenv}
    VERSION

deps =
    pip>=22.1
    changes: https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl
    sum: rst2pdf[svgsupport]
    sum: docutils==0.20.1

commands =
    changes: bash -c 'gitchangelog {posargs} > CHANGELOG.rst'
    sum: make -C docs/sum/sum

[testenv:build]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    SETUPTOOLS_SCM_DEBUG

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv =
    CI
    OS
    PYTHONIOENCODING

deps =
    pip>=22.1

commands =
    python -m pip install timew_addons --pre --force-reinstall --prefer-binary -f dist/
    python -m pip show -f timew_addons

[testenv:lint]
allowlist_externals =
    bash

passenv =
    CI
    PYTHONIOENCODING

setenv = PYTHONPATH = {toxinidir}/src

deps =
    {[base]deps}
    -r requirements.txt
    pylint

commands =
    pylint --fail-under=9 src/

[testenv:style]
envdir = {toxworkdir}/tests

passenv =
    {[testenv:tests]passenv}

deps =
    pip>=23.1
    flake8

commands =
    flake8 extensions/ scripts/ src/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}/src

deps =
    pip>=23.1
    munch[yaml]
    munch-stubs
    PyYAML
    timew-report
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive

[testenv:reuse]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    reuse
    sbom4python

commands =
    reuse {posargs:"lint"}

[testenv:sec]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=23.1
    bandit[toml]

commands =
    bandit -s B603,B404 -r extensions/ src/

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf __pycache__ .coverage.* build dist docs/source/api/'
    bash -c 'rm -rf docs/sum/sum/*.pdf src/*.egg-info src/*/__pycache__'
